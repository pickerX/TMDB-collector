/*
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 */
def build = [:]
build.min_sdk = 16
build.compile_sdk = 29
build.target_sdk = 29
build.build_tools = "30.0.2"
build.version_code = 1
build.version_name = "1.0.0"
build.applicationId = "io.tmdb.collector"
ext.buildVersions = build

ext {
    versions = [
            activity             : '1.1.0',
            android_gradle_plugin: '4.1.1',
            annotations          : "1.0.0",
            assisted_inject      : "0.6.0",
            apache_commons       : "2.5",
            appcompat            : "1.2.0",
            arch_core            : "2.1.0",
            atsl_core            : "1.2.0",
            atsl_junit           : "1.1.2",
            atsl_rules           : "1.2.0",
            atsl_runner          : "1.2.0",
            benchmark            : "1.0.0",
            cardview             : "1.0.0",
            camerax              : "1.0.0-beta11",
            constraint_layout    : "2.0.1",
            core_ktx             : "1.3.1",
            coroutines           : "1.3.9",
            dagger               : "2.16",
            dagger_hilt          : "2.28-alpha",
            dexmaker             : "2.2.0",
            espresso             : "3.2.0",
            fragment             : "1.2.1",
            glide                : "4.11.0",
            hamcrest             : "1.3",
            junit                : "4.12",
            jetpack_hilt         : "1.0.0-alpha01",
            kotlin               : "1.4.10",
            lifecycle            : "2.2.0",
            material             : "1.2.1",
            multidex             : "1.0.3",
            mockito              : "2.25.0",
            mockito_all          : "1.10.19",
            mockito_android      : "2.25.0",
            mockwebserver        : "3.8.1",
            navigation           : "2.3.0",
            logging_interceptor  : "3.9.0",
            okhttp3              : "3.10.0",
            paging               : "3.0.0-alpha07",
            recyclerview         : "1.1.0",
            retrofit             : "2.9.0",
            robolectric          : "4.2",
            room                 : "2.2.5",
            rx_android           : "2.0.1",
            rxjava2              : "2.1.3",
            startup              : "1.0.0-beta01",
            smart_refresh        : "2.0.1",
            timber               : "4.7.1",
            transition           : "1.3.0",
            truth                : "1.0.1",
            work                 : "2.4.0",
    ]
}

ext {
    deps = [
            gradle_plugin      : "com.android.tools.build:gradle:$versions.android_gradle_plugin",

            kotlin             : [
                    stdlib : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin",
                    test   : "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin",
                    plugin : "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin",
                    allopen: "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin",
            ],
            arch               : [
                    material         : "com.google.android.material:material:$versions.material",
                    cardview         : "androidx.cardview:cardview:$versions.cardview",
                    constraint_layout: "androidx.constraintlayout:constraintlayout:$versions.constraint_layout",
                    core_ktx         : "androidx.core:core-ktx:$versions.core_ktx",
                    app_compat       : "androidx.appcompat:appcompat:$versions.appcompat",
                    runtime          : "androidx.arch.core:core-runtime:$versions.arch_core",
                    activity_ktx     : "androidx.activity:activity-ktx:$versions.activity",
                    recyclerview     : "androidx.recyclerview:recyclerview:$versions.recyclerview",
                    paging_ktx       : "androidx.paging:paging-runtime-ktx:$versions.paging",
                    transition       : "androidx.transition:transition:$versions.transition",
                    annotations      : "androidx.annotation:annotation:$versions.annotations",
                    viewpage2        : "androidx.viewpager2:viewpager2:1.0.0",
                    startup          : "androidx.startup:startup-runtime:$versions.startup",

                    testing          : "androidx.arch.core:core-testing:$versions.arch_core",
                    multidex         : "com.android.support:multidex:$versions.multidex"

            ],
            lifecycle          : [
                    viewmodel_ktx       : "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle",
                    viewmodel_savedstate: "androidx.lifecycle:lifecycle-viewmodel-savedstate:$versions.lifecycle",
                    livedata_ktx        : "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle",
                    extensions          : "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle",
                    runtime_ktx         : "androidx.lifecycle:lifecycle-runtime-ktx:$versions.lifecycle",
                    runtime             : "androidx.lifecycle:lifecycle-runtime:$versions.lifecycle",
                    compiler            : "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle",
                    java8               : "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle",
            ],
            fragment           : [
                    runtime    : "androidx.fragment:fragment:$versions.fragment",
                    runtime_ktx: "androidx.fragment:fragment-ktx:$versions.fragment",
                    testing    : "androidx.fragment:fragment-testing:$versions.fragment",
            ],
            coroutines         : [
                    android: "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines",
                    test   : "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutines",
            ],
            navigation         : [
                    runtime         : "androidx.navigation:navigation-runtime:$versions.navigation",
                    runtime_ktx     : "androidx.navigation:navigation-runtime-ktx:$versions.navigation",
                    fragment        : "androidx.navigation:navigation-fragment:$versions.navigation",
                    fragment_ktx    : "androidx.navigation:navigation-fragment-ktx:$versions.navigation",
                    testing         : "androidx.navigation:navigation-testing:$versions.navigation",
                    ui              : "androidx.navigation:navigation-ui:$versions.navigation",
                    ui_ktx          : "androidx.navigation:navigation-ui-ktx:$versions.navigation",
                    safe_args_plugin: "androidx.navigation:navigation-safe-args-gradle-plugin:$versions.navigation",
            ],
            room               : [
                    runtime : "androidx.room:room-runtime:$versions.room",
                    ktx     : "androidx.room:room-ktx:$versions.room",
                    compiler: "androidx.room:room-compiler:$versions.room",
                    rxjava2 : "androidx.room:room-rxjava2:$versions.room",
                    testing : "androidx.room:room-testing:$versions.room",
            ],
            camera             : [
                    // The following line is optional, as the core library is included indirectly by camera-camera2
                    core      : "androidx.camera:camera-core:${versions.camerax}",
                    camera2   : "androidx.camera:camera-camera2:${versions.camerax}",
                    // If you want to additionally use the CameraX Lifecycle library
                    lifecycle : "androidx.camera:camera-lifecycle:${versions.camerax}",
                    // If you want to additionally use the CameraX View class
                    view      : "androidx.camera:camera-view:1.0.0-alpha18",
                    // If you want to additionally use the CameraX Extensions library
                    extensions: "androidx.camera:camera-extensions:1.0.0-alpha18"
            ],
            work               : [
                    runtime    : "androidx.work:work-runtime:$versions.work",
                    runtime_ktx: "androidx.work:work-runtime-ktx:$versions.work",
                    rxjava2    : "androidx.work:work-rxjava2:$versions.work",
                    testing    : "androidx.work:work-testing:$versions.work",
            ],
            dagger             : [
                    runtime                 : "com.google.dagger:dagger:$versions.dagger",
                    android                 : "com.google.dagger:dagger-android:$versions.dagger",
                    android_support         : "com.google.dagger:dagger-android-support:$versions.dagger",
                    compiler                : "com.google.dagger:dagger-compiler:$versions.dagger",
                    android_support_compiler: "com.google.dagger:dagger-android-processor:$versions.dagger",
            ],
            hilt               : [
                    plugin                   : "com.google.dagger:hilt-android-gradle-plugin:$versions.dagger_hilt",
                    // JetPack + Hilt
                    viewmodel                : "androidx.hilt:hilt-lifecycle-viewmodel:$versions.jetpack_hilt",
                    compiler                 : "androidx.hilt:hilt-compiler:$versions.jetpack_hilt",
                    // Dagger + Hilt
                    dagger_hilt              : "com.google.dagger:hilt-android:$versions.dagger_hilt",
                    dagger_hilt_compile      : "com.google.dagger:hilt-android-compiler:$versions.dagger_hilt",
                    // Assisted Inject
                    assisted_dagger          : "com.squareup.inject:assisted-inject-annotations-dagger2:$versions.assisted_inject",
                    assisted_dagger_processor: "com.squareup.inject:assisted-inject-processor-dagger2:$versions.assisted_inject",
                    test                     : "com.google.dagger:hilt-android-testing:$versions.dagger_hilt",
                    test_compile             : "com.google.dagger:hilt-android-compiler:$versions.dagger_hilt",
            ],
            glide              : [
                    runtime : "com.github.bumptech.glide:glide:$versions.glide",
                    compiler: "com.github.bumptech.glide:compiler:$versions.glide",
            ],
            espresso           : [
                    core   : "androidx.test.espresso:espresso-core:$versions.espresso",
                    contrib: "androidx.test.espresso:espresso-contrib:$versions.espresso",
                    intents: "androidx.test.espresso:espresso-intents:$versions.espresso",
            ],
            mockito            : [
                    core   : "org.mockito:mockito-core:$versions.mockito",
                    all    : "org.mockito:mockito-all:$versions.mockito_all",
                    android: "org.mockito:mockito-android:$versions.mockito_android",
            ],
            atsl               : [
                    core     : "androidx.test:core:$versions.atsl_core",
                    ext_junit: "androidx.test.ext:junit:$versions.atsl_junit",
                    runner   : "androidx.test:runner:$versions.atsl_runner",
                    rules    : "androidx.test:rules:$versions.atsl_rules",
            ],
            retrofit           : [
                    logging_interceptor: "com.squareup.okhttp3:logging-interceptor:$versions.logging_interceptor",
                    runtime            : "com.squareup.retrofit2:retrofit:$versions.retrofit",
                    gson               : "com.squareup.retrofit2:converter-gson:$versions.retrofit",
                    mock               : "com.squareup.retrofit2:retrofit-mock:$versions.retrofit",
            ],
            okhttp             : [
                    "okhttp": "com.squareup.okhttp3:okhttp:${versions.okhttp3}",
            ],
            json               : [
                    fastjson: "com.alibaba:fastjson:1.1.51.android",
                    gson    : "com.google.code.gson:gson:2.8.2",
            ],
            rxjava             : [
                    android: "io.reactivex.rxjava2:rxandroid:$versions.rx_android",
                    java   : "io.reactivex.rxjava2:rxjava:$versions.rxjava2",
            ],
            ui                 : [
                    circleimageview : 'de.hdodenhof:circleimageview:3.1.0',
                    bottomnavigation: 'com.ashokvarma.android:bottom-navigation-bar:2.2.0',
            ],
            afodialog          : [
                    core        : 'com.afollestad.material-dialogs:core:3.3.0',
                    bottomsheets: 'com.afollestad.material-dialogs:bottomsheets:3.3.0',
                    datetime    : 'com.afollestad.material-dialogs:datetime:3.3.0',
            ],
            alibaba            : [
                    arouter         : "com.alibaba:arouter-api:1.5.0",
                    arouter_compiler: "com.alibaba:arouter-compiler:1.2.2",
                    arouter_register: "com.alibaba:arouter-register:1.0.2",
            ],
            bugly              : [
                    //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.2.0
                    crashreport_upgrade: "com.tencent.bugly:crashreport_upgrade:latest.release",
                    nativecrashreport  : "com.tencent.bugly:nativecrashreport:latest.release",
                    crashreport        : "com.tencent.bugly:crashreport:latest.release",
            ],
            refresh            : [
                    kernel         : "com.scwang.smart:refresh-layout-kernel:$versions.smart_refresh",
                    classics       : "com.scwang.smart:refresh-header-classics:$versions.smart_refresh",
                    radar          : "com.scwang.smart:refresh-header-radar:$versions.smart_refresh",
                    falsify        : "com.scwang.smart:refresh-header-falsify:$versions.smart_refresh",
                    material       : "com.scwang.smart:refresh-header-material:$versions.smart_refresh",
                    two_level      : "com.scwang.smart:refresh-header-two-level:$versions.smart_refresh",
                    footer_ball    : "com.scwang.smart:refresh-footer-ball:$versions.smart_refresh",
                    footer_classics: "com.scwang.smart:refresh-footer-classics:$versions.smart_refresh",
            ],
            coil               : "io.coil-kt:coil:1.0.0",
            picture_selector   : "com.github.LuckSiege.PictureSelector:picture_library:v2.5.9",
            doraemonkit        : "com.didichuxing.doraemonkit:doraemonkit-plugin:3.2.0",
            doraemonkit_debug  : "com.didichuxing.doraemonkit:doraemonkit:3.2.0",
            doraemonkit_release: "com.didichuxing.doraemonkit:doraemonkit-no-op:3.2.0",
            sandwich           : "com.github.skydoves:sandwich:1.0.6",

            benchmark          : "androidx.benchmark:benchmark-junit4:$versions.benchmark",
            benchmark_gradle   : "androidx.benchmark:benchmark-gradle-plugin:$versions.benchmark",
            dexmaker           : "com.linkedin.dexmaker:dexmaker-mockito:$versions.dexmaker",
            hamcrest           : "org.hamcrest:hamcrest-all:$versions.hamcrest",
            junit              : "junit:junit:$versions.junit",
            mock_web_server    : "com.squareup.okhttp3:mockwebserver:$versions.mockwebserver",
            robolectric        : "org.robolectric:robolectric:$versions.robolectric",
            timber             : "com.jakewharton.timber:timber:$versions.timber",
            truth              : "com.google.truth:truth:$versions.truth",
    ]
}

static def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.maven { url "https://jitpack.io" }
}

ext.addRepos = this.&addRepos

static def withProperty(String property) {
    return "\"$property\""
}

ext.withProperty = this.&withProperty

def initConfig() {
    Properties properties = new Properties()
    File propertyFile = new File(rootDir.getAbsolutePath(), "config.properties")
    properties.load(propertyFile.newDataInputStream())

    gradle.ext.storeFile = properties.getProperty("storeFile")
    gradle.ext.storePassword = properties.getProperty("storePassword")
    gradle.ext.keyAlias = properties.getProperty("keyAlias")
    gradle.ext.keyPassword = properties.getProperty("keyPassword")

    gradle.ext.apiKey = properties.getProperty("apiKey")
    gradle.ext.fileAuthorities = properties.getProperty("fileAuthorities")

    println(">>> ${gradle.ext.storeFile}")
    println(">>> ${gradle.ext.storePassword}")
    println(">>> ${gradle.ext.keyAlias}")
    println(">>> ${gradle.ext.keyPassword}")
}

ext.initConfig = this.&initConfig